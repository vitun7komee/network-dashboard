import { Alert, Card, Col, Row, Spin, Table, Typography } from "antd";
import React, { useEffect, useState } from "react";
import { axiosInstance } from "../api/axiosInstance";

const { Title } = Typography;

const AnomalyDashboard: React.FC = () => {
  const [data, setData] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    axiosInstance.get("/api/anomaly-detection")
      .then(res => {
        setData(res.data);
        setError(null);
      })
      .catch(() => setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏"))
      .finally(() => setLoading(false));
  }, []);

  if (loading) return <Spin tip="–ó–∞–≥—Ä—É–∑–∫–∞..." />;
  if (error) return <Alert type="error" message={error} showIcon />;

  return (
    <div style={{ padding: 24 }}>
      <Title level={2}>üö® DDoS –∏ –∞–Ω–æ–º–∞–ª–∏–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å)</Title>
      <Row gutter={24}>
        <Col span={12}>
          <Card title="üåä –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ IP (–º–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–æ–≤)">
            <Table
              dataSource={data.flooding_ips}
              columns={[
                { title: "IP", dataIndex: "src_ip", key: "src_ip" },
                { title: "–ü–æ—Ç–æ–∫–∏", dataIndex: "connection_count", key: "connection_count" },
              ]}
              rowKey="src_ip"
              pagination={false}
            />
          </Card>
        </Col>
        <Col span={12}>
          <Card title="üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–ª–µ—Ä—Ç–æ–≤">
            <Table
              dataSource={data.alert_categories}
              columns={[
                { title: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", dataIndex: "alert_category", key: "alert_category" },
                { title: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", dataIndex: "count", key: "count" },
              ]}
              rowKey="alert_category"
              pagination={false}
            />
          </Card>
        </Col>
      </Row>

      <Row gutter={24} style={{ marginTop: 24 }}>
        <Col span={12}>
          <Card title="üìä –ü—Ä–æ—Ç–æ–∫–æ–ª—ã –≤ —Ç—Ä–∞—Ñ–∏–∫–µ">
            <Table
              dataSource={data.protocol_distribution}
              columns={[
                { title: "–ü—Ä–æ—Ç–æ–∫–æ–ª", dataIndex: "proto", key: "proto" },
                { title: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", dataIndex: "count", key: "count" },
              ]}
              rowKey="proto"
              pagination={false}
            />
          </Card>
        </Col>
        <Col span={12}>
          <Card title="‚ò†Ô∏è IP —Å –ø–ª–æ—Ö–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π">
            <Table
              dataSource={data.bad_ips}
              columns={[
                { title: "IP", dataIndex: "ip", key: "ip" },
                { title: "–†–µ–ø—É—Ç–∞—Ü–∏—è", dataIndex: "reputation", key: "reputation" },
                { title: "–û—Ü–µ–Ω–∫–∞", dataIndex: "score", key: "score" },
                { title: "–°—Ç—Ä–∞–Ω–∞", dataIndex: "country", key: "country" },
              ]}
              rowKey="ip"
              pagination={false}
            />
          </Card>
        </Col>
      </Row>
    </div>
  );
};

export default AnomalyDashboard;
